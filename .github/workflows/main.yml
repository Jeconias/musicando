# This is a basic workflow to help you get started with Actions

name: Android Feature Branch CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  Build-App:
    # The type of runner that the job will run on
    runs-on: ubuntu-18.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        id: cacheApp
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - name: Create .env file
        uses: Jeconias/create-envfile@v1.0
        with:
          ENVIRONMENT: ${{ secrets.ENVIRONMENT }}
          API_URL: ${{ secrets.API_URL }}
          MYAPP_RELEASE_STORE_FILE: ${{ secrets.MYAPP_RELEASE_STORE_FILE }}
          MYAPP_RELEASE_STORE_PASSWORD: ${{ secrets.MYAPP_RELEASE_STORE_PASSWORD }}
          MYAPP_RELEASE_KEY_ALIAS: ${{ secrets.MYAPP_RELEASE_KEY_ALIAS }}
          MYAPP_RELEASE_KEY_PASSWORD: ${{ secrets.MYAPP_RELEASE_KEY_PASSWORD }}

          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          FIREBASE_MESSAGING_SEND_ID: ${{ secrets.FIREBASE_MESSAGING_SEND_ID }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
          file_name: '.env.test'
          directory: '.'

      - name: Signing and Building the APP
        uses: actions/setup-java@v1
        with:
          java-version: '11.0.10'
      - run: keytool -genkey -v -dname "cn=OlaMundoWeb, ou=OMW, o=none, l=none, st=Rio Grande do Norte, c=RN" -keystore "./android/app/${{ secrets.MYAPP_RELEASE_STORE_FILE }}" -storepass "${{ secrets.MYAPP_RELEASE_STORE_PASSWORD }}" -alias "${{ secrets.MYAPP_RELEASE_KEY_ALIAS }}" -keyalg RSA -keysize 2048 -validity 10000

      - name: Checking cache
        if: steps.cacheApp.outputs.cache-hit != 'true'
        run: yarn install --production

      - name: Installing dependencies and building APP
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - run: yarn android:build:test

      - name: Sharing App
        uses: actions/upload-artifact@v2
        with:
          name: MusicandoAPP
          path: android/app/build/outputs/apk/release/app-release.apk

  Release-App:
    needs: Build-App

    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2

      - name: Display structure of downloaded files
        run: ls -R
        run: ls android/app/build/outputs/apk/release
        working-directory: '.'

      - name: Downloading the last version of APP
        uses: actions/download-artifact@v2
        with:
          name: MusicandoApp
          path: '.'

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          body_path: ~/new/release
          draft: true
          prerelease: true
